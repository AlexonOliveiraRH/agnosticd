---

- name: Check if template exists for the environment
  stat:
    path: "../configs/{{ env_type }}/files/cloud_providers/{{cloud_provider}}_cloud_template.j2"
  register: stat_local_template

- name: Use CloudFormation template from the environment
  set_fact:
    cloudformation_template_src: "../configs/{{ env_type }}/files/cloud_providers/{{cloud_provider}}_cloud_template.j2"
  when: stat_local_template.stat.exists


# Check for multi region
- name: Check if Multi region cloudtemplate exists
  stat:
    path: "../configs/{{ env_type }}/files/cloud_providers/{{stack_file}}.j2"
  register: stat_local_template_multi_region
  when: stack_file is defined

- name: Use CloudFormation template from the environment
  set_fact:
    cloudformation_template_src: "../configs/{{ env_type }}/files/cloud_providers/{{stack_file}}.j2"
  when: stack_file is defined and stat_local_template_multi_region.stat.exists

# need to write some comments around here to explain this complicated logic
# Mitesh will make the logic statement better and pretty. 
- name: Use the default CloudFormation template
  set_fact:
    cloudformation_template_src: "templates/cloud_template.j2"
  when:
    - not stat_local_template.stat.exists or (stat_local_template_multi_region.stat is defined and not stat_local_template_multi_region.stat.exists)

- name: Print cloudformation_template_src
  debug:
    var: cloudformation_template_src
